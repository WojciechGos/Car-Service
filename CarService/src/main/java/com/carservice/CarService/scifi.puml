                         @startuml
'https://plantuml.com/class-diagram

abstract class PersonalData {
    - Long id
    - String name
    - String surname
    - String email
    - String phoneNumber
}
class Client  extends PersonalData{
    List<Commission> commissions
}
abstract class Worker extends PersonalData{
    - BigDecimal salaryPerHour
    - WorkSchedule schedule
    List<Commission> commissions
}

class WorkSchedule {
    - List<LocalDate> workDays
}



class SparePart extends Item {
    SparePartState sps
}


class Commission {
    - Long id
    - LocalDate createDate
    - LocalDate endDate
    - Vehicle vehicle
    - Client client
    - Contractor contractor
    - Cost costEstimate
    - Cost totalCost
    - String description

    updateStatus()
}

abstract class Invoice {
    - PrintInvoice printInvoice
    - Commission commissions

    GenerateInvoice(Commission c)


}
class VatInvoice extends Invoice {
}

class SaleInvoice extends Invoice {
}

interface PrintInvoice {
    GenerateInvoice(Commission c)
}

class PrintPDFInvoice implements PrintInvoice {
}

class PrintHTMLInvoice implements PrintInvoice {
}








class Vehicle {
    - Long id
    - String brand
    - String model
    - String vin
    - String registrationNumber
    - String productionYear
}



enum CommissionStatus{
    PENDING
    IN_PROGRESS
    COMPLETED
    RECEIVED
    CANCELED
}

class Warehouse{
    receiveOrder(Order o)
    removeSparePart(SparePart sp)
    increaseStock(SparePart sp, int number)
    decreaseStock(SparePart sp, int number)
    checkStockAvailability(SparePart sp)
}
enum SparePartState{
    DAMAGED,
    WHOLE,
    MISS,
}


class Cost {
    - Long id
    - String name
    - LocalDate createDate
    - List<SpareParts> parts
    - BigDecimal laborPrice
    - BigDecimal totalCost

    calculateSparePartsCost()
    calculateTotalCost()
    calculateLaborCost()
}

class OrderItem extends Item{
    - Double discount
}
abstract class Order {
    - Worker worker
    - LocalDate orderDate
    - LocalDate receiveDate
    - List<OrderItem> orderItem
    - OrderStatus status
    - Warehouse warehouse

    addOrderItem(Order o)
    deleteOrderItem(Order o)
    modifyAmountOfOrderItem(Order o, int newQuantity)
}

class LocalOrder extends Order {
    - Long id
    - List<Commission> commissions
}
class ExternalOrder extends Order {
    - Long id
    - BigDecimal cost
}

interface WholesalerAdapter {
    getOrderItemList()
    orderItem()
}

class WholesalerIPARTS {
    get()
    post()
}

class WholesalerAdapterIPARTS extends WholesalerIPARTS implements WholesalerAdapter{
    getOrderItemList()
    orderItem(Integer id)
}

class WholesalerSTARTHURT {
    get()
    post()
}

class WholesalerAdapterSTARTHURT extends WholesalerSTARTHURT implements WholesalerAdapter{
    getOrderItemList()
    orderItem(Integer id)
}

WholesalerAdapter o-- OrderItem

abstract class Item {
    - Long id
    - String name
    - BigDecimal price
    - Integer quantity
    - Producent producent
}
class Producent {
    - Long id
    - String name
}
enum OrderStatus {
    CREATING
    NEW
    IN_PROGRESS
    COMPLETED
    CANCELLED
}

enum PaymentStatus{
    INCOMPLETE
    EXPIRED
    FAILED
    CANCELED
    SUCCEEDED
    REFUNDED
    PARTIALLY_REFUNDED
    PENDING
    VOID
    CHARGEBACK
}

class Payment {
    - Long id
    - BigDecimal payment
    - Client client
    - PaymentStatus status
    payUsingCard()
    payUsingCash()
    payUsingBlik()
}

class OrderSparePart {
    - SparePart sparePart
    - Integer quantity
}

Client --> Payment : "Pay"
PaymentStatus --* Payment

Warehouse <-- ExternalOrder : "communicate"
Warehouse <-- LocalOrder : "communicate"

OrderSparePart --o Cost
Cost --* Commission

SparePartState --* SparePart
Item *-- Producent
Order *-- OrderStatus
Commission *-- Client
Commission *-- Vehicle
Commission --o LocalOrder
Commission *-- CommissionStatus
Commission --* Payment


Order *-- Warehouse
Order o-- Item

Worker o-o Commission

Worker --* Order

Worker *-- WorkSchedule

Invoice o-- PrintInvoice
Commission --* Invoice

SparePart --o OrderSparePart


@enduml